// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TopicsDao is the data access object for table topics.
type TopicsDao struct {
	table   string        // table is the underlying table name of the DAO.
	group   string        // group is the database configuration group name of current DAO.
	columns TopicsColumns // columns contains all the column names of Table for convenient usage.
}

// TopicsColumns defines and stores column names for table topics.
type TopicsColumns struct {
	Id              string // ID
	UserId          string // USER_ID
	Content         string // content
	Title           string // title
	UpdateTime      string // time
	ApproveCount    string // Approve count
	DisapproveCount string // Disapprove count
	Images          string // Image urls
	Videos          string // Video urls
}

// topicsColumns holds the columns for table topics.
var topicsColumns = TopicsColumns{
	Id:              "id",
	UserId:          "user_id",
	Content:         "content",
	Title:           "title",
	UpdateTime:      "update_time",
	ApproveCount:    "approve_count",
	DisapproveCount: "disapprove_count",
	Images:          "images",
	Videos:          "videos",
}

// NewTopicsDao creates and returns a new DAO object for table data access.
func NewTopicsDao() *TopicsDao {
	return &TopicsDao{
		group:   "default",
		table:   "topics",
		columns: topicsColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TopicsDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TopicsDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TopicsDao) Columns() TopicsColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TopicsDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TopicsDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TopicsDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
