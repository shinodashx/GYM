// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// EvaluationResponseDao is the data access object for table evaluation_response.
type EvaluationResponseDao struct {
	table   string                    // table is the underlying table name of the DAO.
	group   string                    // group is the database configuration group name of current DAO.
	columns EvaluationResponseColumns // columns contains all the column names of Table for convenient usage.
}

// EvaluationResponseColumns defines and stores column names for table evaluation_response.
type EvaluationResponseColumns struct {
	Id               string // ID
	ParentResponseId string // reponse_id
	UserId           string // response_user_id
	EvaluationId     string // evaluation_id
	Content          string // response_content
	UpdateTime       string // response_time
	Images           string // Image urls
	Videos           string // Videos urls
}

// evaluationResponseColumns holds the columns for table evaluation_response.
var evaluationResponseColumns = EvaluationResponseColumns{
	Id:               "id",
	ParentResponseId: "parent_response_id",
	UserId:           "user_id",
	EvaluationId:     "evaluation_id",
	Content:          "content",
	UpdateTime:       "update_time",
	Images:           "images",
	Videos:           "videos",
}

// NewEvaluationResponseDao creates and returns a new DAO object for table data access.
func NewEvaluationResponseDao() *EvaluationResponseDao {
	return &EvaluationResponseDao{
		group:   "default",
		table:   "evaluation_response",
		columns: evaluationResponseColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *EvaluationResponseDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *EvaluationResponseDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *EvaluationResponseDao) Columns() EvaluationResponseColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *EvaluationResponseDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *EvaluationResponseDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *EvaluationResponseDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
